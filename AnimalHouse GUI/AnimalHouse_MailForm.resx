<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EL4j8P8AcLMaB0O+NosAAAAASUVORK5CYII=
</value>
  </data>
</root>